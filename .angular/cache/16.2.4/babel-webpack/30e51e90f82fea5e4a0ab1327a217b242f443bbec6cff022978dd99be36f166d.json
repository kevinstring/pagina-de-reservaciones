{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ServiciosService {\n  constructor(http) {\n    this.http = http;\n    this.url = 'http://localhost:8080';\n    this.httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'multipart/form-data' // Configura el tipo de medio\n      })\n    };\n  }\n\n  getLugares(formulario) {\n    return this.http.post(this.url + '/lugar/guardar', formulario);\n  }\n  static #_ = this.ɵfac = function ServiciosService_Factory(t) {\n    return new (t || ServiciosService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ServiciosService,\n    factory: ServiciosService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpHeaders","ServiciosService","constructor","http","url","httpOptions","headers","getLugares","formulario","post","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Usuario\\Desktop\\angularProgra2\\pagina-de-reservaciones\\src\\app\\servicios.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\n\n\n\nexport class ServiciosService {\n   url = 'http://localhost:8080';\n    httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'multipart/form-data' // Configura el tipo de medio\n    })\n  };\n  constructor(private http:HttpClient) { }\n\n  getLugares(formulario:any){\n    return this.http.post(this.url+'/lugar/guardar',formulario);\n  }\n\n}\n"],"mappings":"AAEA,SAASA,WAAW,QAAQ,sBAAsB;;;AAQlD,OAAM,MAAOC,gBAAgB;EAO3BC,YAAoBC,IAAe;IAAf,KAAAA,IAAI,GAAJA,IAAI;IANvB,KAAAC,GAAG,GAAG,uBAAuB;IAC5B,KAAAC,WAAW,GAAG;MACdC,OAAO,EAAE,IAAIN,WAAW,CAAC;QACvB,cAAc,EAAE,qBAAqB,CAAC;OACvC;KACF;EACsC;;EAEvCO,UAAUA,CAACC,UAAc;IACvB,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAC,IAAI,CAACL,GAAG,GAAC,gBAAgB,EAACI,UAAU,CAAC;EAC7D;EAAC,QAAAE,CAAA,G;qBAXUT,gBAAgB,EAAAU,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAhBd,gBAAgB;IAAAe,OAAA,EAAhBf,gBAAgB,CAAAgB,IAAA;IAAAC,UAAA,EALf;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}